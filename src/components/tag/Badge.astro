---
import type { HTMLAttributes } from 'astro/types';
import { cva, type VariantProps } from 'class-variance-authority';

export interface Props extends HTMLAttributes<'a'>, VariantProps<typeof span> {
  tag: string;
}


const badgeCVA = cva('rounded-md font-medium capitalize shadow-md', {
  variants: {
    intent: {
      primary: [
        'bg-teal-700',
        'text-white',
        'hover:bg-teal-800',
        'active:bg-teal-900',
        'focus-visible:outline',
        'focus-visible:outline-2',
        'focus-visible:outline-offset-2',
        'focus-visible:outline-teal-700',
      ],
      secondary: [
        'bg-white',
        'text-gray-900',
        'ring-1',
        'ring-inset',
        'ring-gray-300',
        'hover:bg-gray-50',
        'active:bg-gray-100',
      ],
    },
    size: {
      xs: ['text-xs', 'py-0.5', 'px-2', 'me-2'],
      sm: ['text-sm', 'py-0.5', 'px-2', 'me-2'],
      md: ['text-sm', 'py-1', 'px-3', 'me-2'],
      // text-md?
      lg: ['text-md', 'py-1', 'px-3', 'me-2'],
      xl: ['text-md', 'py-1', 'px-3', 'me-2'],
    },
    _content: {
      text: '',
      textAndIcon: 'inline-flex items-center',
      icon: '',
    },
  },
});

// const { category } = Astro.props;

const {
  category,
  intent = 'primary',
  size = 'md',
  _content = 'text',
  ...attrs
} = Astro.props;

const { tag } = Astro.props;

const bgColor = 'bg-indigo-100';
const textColor = 'text-blue-800';
---

<span class={badgeCVA({ intent, size, _content })} {...attrs}> {tag}</span>
